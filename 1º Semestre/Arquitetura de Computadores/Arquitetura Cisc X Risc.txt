			Arquitetura Cisc X Risc 

Descrição:
	- Conceitos de arquitetura CISC e RISC: características, vantagens e desvantagens

Propósito:
	- Compreender as vantagens e desvatagens da arquitetruras RISC e CISC e suas influências no desenvolvimento dos processadores, assim como identificar os motivos para a escolha de cada uma das arquiteturas, lembrando que, atualmente, os processadores costumam utilizar combinação de ambas (em arquitetura híbrida)

Preparação:
	- Antes de iniciar o estudo, você deve conhecer os conceitos de estrututra básica dos computadores, intruções e etapas de processamento.


- Módulo 1
 - Características da arquitetura CISC
	- Identificar características e propriedades da arquitetura CISC 

- Módulo 2 
 - Características da arquitetura RISC
	- Identificar características e propriedades da arquitetura RISC

				INTRODUÇÃO

Os termos RISC e CISC podem ser compreendidas como tipos de conjuntos de instruções de máquinas que fazem parte da arquitetura de computadores desenvolvidas pela indústria de computação.

Conhecer o tipo de arquitetura RISC e CISC é importante, pois é esse conjunto de instruções que dará a ordem para que o computador execute determinada operação. Assim, o projeto de um processador é centrado no conjunto de instruções de máquina elabodado para que ele execute, ou seja, do conjunto de operações primitivas que ele pode executar.

Cada arquitetura tem sua forma de ser implementada, suas vantagens e desvantagens que acabam norteando a escolha de uma ou de outra, ou de ambas, a chamada arquitetura híbrida.

Aqui você compreenderá bem o que são as arquiteturas CISC, RISC e híbrida, bem como suas características e principais diferenças.


				Módulo  1
		Características da arquitetura CISC

- Revisão funcionamentodo computador
	- CPU.
		- Registradores
			- Registradores de uso geral que são a memória de trabalho da CPU
			- Registradores especial que são RDM Registrador de dados de memória, REM registrador de endereço de memória, Contador de intruções e o registrador de intruções.
		- Unidade lógica aritimética(UAL)
			- Realizar as operações lógicas e aritiméticas 
		- Unidade de cintrole (UC) é como o mastro da CPU, distribiu os comandos 
			- Ciclo de excução de instrução :
inicio > Busca a próxma instrução > decodificar a instrução > executar a instrução > fim
		- Barramento interno (BI)
	- Memória.
	- Dispositivos de entrada\saida.
	- Barramentos (Meios fisicos de ligação entre os componentes a cima).
		- Barramento de dados. 
		- Barramento de endereços. 
		- Barramento de controle. 


Abordagem CISC na arquitetura de processadores
- o termo CISC remete a um Computador com Conjunto Complexo de Instruções
 está relacionada às possibilidades na hora de se projetar a arquitetura de um processador, com instruções específicas para o maior número de funcionalidades possível. Além disso, essas instruções realizam operações com diferentes níveis de complexidade, buscando, muitas vezes, operandos na memória principal e retornando a ela os resultados.

Isso faz com que a quantidade de instruções seja extensa e que a Unidade de Controle do processador seja bastante complexa para decodificar a instrução a ser executada. Entretanto, a complexidade é compensada por poucos acessos à memória e soluções adequadas para problemas específicos.

				UNIDADE DE CONTROLE
	- MEMÓRIA DE DADOS 				- MEMÓRIA DE PROGRAMA 
	- REGISTRADORES					- UNIDADE  DE ENTRADA E SAIDA 


ORIGEM 
  A sigla CISC só começou a ser usada após a criação do conceito RISC  no inicio da decada de 1980 quando os processadores anteriores passaram a ser chamados de CISC de forma retroativa 

Conforme a tecnologia de fabricação e a capacidade computacional evoluíam, problemas mais complexos puderam ser resolvidos pelos processadores. Para esses problemas, foram sendo criadas novas instruções específicas.

Múltiplo endereçamento
Observando a última coluna da tabela anterior, é possível perceber o conceito principal e uma das definições mais usuais de arquitetura com abordagem CISC: diversos tipos de endereçamento.

Dessa forma, temos:

- R-R
 - Para instruções que usam registradores como entrada e saída.
- R-M
 - Quando um dos elementos (operandos ou resultado) deve ser buscado/escrito na memória e ao menos um em registrador
- M-M
 - Para instruções em que os operandos e o resultado estão na memória.

O princípio fundamental da abordagem CISC é a realização de operações complexas, que envolvem buscar operandos na memória principal, operar sobre eles (na ULA) e guardar o resultado já na memória.

Nesses casos, o código de máquina é mais simples de se gerar pelo compilador, pois, geralmente, há relação direta entre uma linha de código em alto nível e uma instrução da arquitetura


				Módulo  2
		Características da arquitetura RISC	
- O termo RISC remete a Computador com Conjunto Restrito de Instruções	
Essa abordagem possui poucas instruções genéricas, com as quais se montam as operações mais complexas. Além disso, as instruções realizam operações apenas sobre os registradores, exceto nos casos de instruções específicas, que servem apenas para buscar ou guardar dados na memória.

Com uma pequena quantidade de instruções, a Unidade de Controle do processador é bastante simples para decodificar a instrução para ser executada. Dessa forma, sobra espaço para mais registradores.

Veja um esquema que ilustra a arquitetura RISC:

	Memória de programa -> Unidade de cintrole <-> Memória de dados

Origem
A abordagem RISC surgiu no início da década de 1980. A partir da sua criação, os processadores anteriores passaram a ser retroativamente chamados de CISC. O surgimento da abordagem RISC se deu na tentativa de resolver as deficiências que começavam a aparecer nos processadores tradicionais (que passariam a ser chamados de CISC).

As diversas operações complexas eram pouco utilizadas pelos programas, pois dependiam de otimização do código em alto nível. As múltiplas formas de endereçamento faziam com que cada instrução demorasse um número variável de clocks para que fosse possível executar. Por fim, a Unidade de Controle grande deixava pouco espaço para registradores, demandando diversas operações de acesso à memória.

Para resolver esses problemas, foi proposta a abordagem RISC.

Premissas e características

A nova abordagem proposta possuía algumas premissas que geraram certas características na arquitetura resultante:
	- Quantidade de instruções
	  - Premissa: quantidade restrita de instruções, com as quais era 	  possível montar as outras.

	  A quantidade reduzida de instruções diminui o tamanho e a complexidade 	  da Unidade de Controle para decodificação da instrução. Com isso, 	  sobra mais espaço para registradores no processador. Enquanto os 	  processadores CISC costumam ter até 8 registradores, é comum que os 	  processadores RISC tenham mais de 32, chegando até a algumas centenas.

	- Tempo de execução 
	  - Premissa: as instruções devem ser executadas com duração próxima, 	    facilitando o pipeline.

	  A premissa de execução com duração próxima serve para facilitar a 	  previsibilidade do processamento de cada instrução. A ideia é que cada 	  etapa da instrução consiga ser executada em um ciclo de máquina (CLK). 	  Como todas as instruções operam usando apenas os rápidos 	  registradores, isso é possível. As exceções são as instruções LOAD e 	  STORE.

	- Operação das instruções 
	  - Premissa: as instruções devem operar sobre registradores, exceto em 	  algumas específicas para busca e gravação de dados na memória (LOAD e 	  STORE). As instruções LOAD e STORE servem para acessar a memória.

	  Com a operação sobre os registradores, o pipeline executa de forma 	  próxima ao ideal (1 etapa por ciclo), exceto pelos acessos à memória 	  das instruções LOAD e STORE, que demandam um tempo maior de espera.

				PIPELINE
considerando as estapas vistas em módulos anteriores:

     1  -                2  -            3       -          4       -  5
B.I (Buscar) -  D.I(Decodificar) - EXE(Executar) - A.M (Acememória) - W.B

as operações de LOAD e STORE, que são custosas e atrasam o pipeline, não são usadas tantas vezes assim. Com vários registradores, as variáveis são carregadas nos registradores quando aparecem pela primeira vez e ficam sendo operadas ali até que seja necessário usar esse registrador para outra função.

Para obtermos uma Unidade de Controle menor, sem microprograma, reduzimos o conjunto de instruções.

Comparação CISC x RISC
Agora que já sabemos como essas duas abordagens fuincionam vamos comparalas

Arquitetura CISC suergiu primeiro mas tem muitas isnstruções, já  arquitetura RISC surgiu depois com menso instruçõs (Instruções simplificadas)


		CISC				RISC	
	Instrução de máquina 		Instrução de máquina
		  |				  |
     Conversão de microcodigos	        Execução da instrução
		  |
	  Microinstruções
		  |
    Execução da microinstrução

Qualquer instrução pode acessar		Somente as instruções de leitura
	   a memória			  e escrita acessam a memória 

Poucos registradores de 6a16		Muitos registraodres de uso geral 
						     até 256

As instruções CISC variam de 16		As instruções do RISC são todas do 
         a 64 bits			do mesmo tamanho contendo 32 bits

Menor paralelismo			Instrução por ciclo

Microprogramação 			Pelo hardware

Programador 				Máquina

Facilita a compilação 			Facilita a execução 


Como vimos, a abordagem CISC surgiu de forma natural, com a evolução dos processadores; na verdade, ela só foi assim denominada após o surgimento da abordagem “rival”: RISC. Hoje em dia, como os processadores tentam misturar as melhores características de ambas as abordagens, é difícil encontrar processadores CISC “puros”. O mais usual é encontrar processadores híbridos, que disponibilizam diversas instruções complexas, com abordagem CISC, mas com um subconjunto reduzido de instruções otimizadas, como na abordagem RISC, capazes de serem executadas em pouquíssimos ciclos de clock.
